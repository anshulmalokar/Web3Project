// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Payer{
  id         Int      @id @default(autoincrement())
  address    String
  payouts    Payout[]
  tasks      Task[]
}

model Reviever{
  id               Int       @id @default(autoincrement())
  address          String    
  submissions      Submission[]
  pending_amount   Int
  locked_amount    Int
}

model Task{
  id  	      Int 	    @id @default(autoincrement())
  title       String?    @default("Select the most clickable thumbnail")
  payer       Payer     @relation(fields: [payer_id],references: [id])
  payer_id    Int
  options     Option[]   
  submissions  Submission[]
}

model Option{
  id          Int       @id @default(autoincrement())
  img_url     String  
  task_id     Int       
  task        Task      @relation(fields: [task_id],references: [id])
  submissions Submission[]
}

model Submission{
  id              Int       @id @default(autoincrement())
  reciever_id     Int
  reciever        Reviever  @relation(fields: [reciever_id],references: [id])  
  task_id         Int
  task            Task      @relation(fields: [task_id],references: [id])
  option_id       Int
  option          Option    @relation(fields: [option_id],references: [id]) 
}

model Payout{
  id         Int    @id @default(autoincrement())
  payer_id   Int
  payer      Payer @relation(fields: [payer_id],references: [id])
  amount     Int
  signature  String
  status     TxnStatus
}

enum TxnStatus{
  SUCCESS
  FAILURE
  PENDING
}